/* The Clear BSD License
 *
 * Copyright (c) 2025 EdgeImpulse Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted (subject to the limitations in the disclaimer
 * below) provided that the following conditions are met:
 *
 *   * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 *   * Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *   documentation and/or other materials provided with the distribution.
 *
 *   * Neither the name of the copyright holder nor the names of its
 *   contributors may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY
 * THIS LICENSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
 * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef OV2640_REGS_H
#define OV2640_REGS_H

#include "arducam.h"
#include "ov2640_reg_addr.h"

#define OV2640_CHIPID_HIGH 	0x0A
#define OV2640_CHIPID_LOW 	0x0B

const struct sensor_reg OV2640_INIT[] =
{
	// DSP
	{OV2640_BANK_SEL, 0x0}, 
	{0x2c, 0xff}, 
	{0x2e, 0xdf},

	// SENSOR
	{OV2640_BANK_SEL, 0x1}, 
	{0x3c, 0x32}, // ok
	{OV2640_SENSOR_CLKRC, 0x0}, // ok vs 0x01
	{OV2640_SENSOR_COM2, 0x02}, // ok
	{OV2640_SENSOR_REG04, 0xa8}, // vs 0x28, horizontal mirror ?
	//{OV2640_SENSOR_REG04, 0x28},
	{OV2640_SENSOR_COM8, 0xe5}, // ok
	{OV2640_SENSOR_COM9, 0x48}, 
	//{OV2640_SENSOR_COM9, 0x40},	// 0x20 or 0x40 ?
	{0x2c, 0x0c}, // ok
	{0x33, 0x78}, // ok
	{0x3a, 0x33}, // ok
	{0x3b, 0xfb}, // ok
	{0x3e, 0x00}, // ok
	{0x43, 0x11}, // ok
	{0x16, 0x10}, // ok
	{0x39, 0x02}, // vs 0x92
	{0x35, 0x88}, // vs 0xda
	{0x22, 0x0a}, // vs 0x1a
	{0x37, 0x40}, // vs c3
	{0x23, 0x00}, // ok
	{OV2640_SENSOR_ARCOM2, 0xa0}, // 0xa0 or 0xc0 ? defaul is 0x20 - reserved...
	{OV2640_SENSOR_ARCOM2, 0x20}, // 0xa0 or 0xc0 ? defaul is 0x20 - reserved...
	{0x06, 0x88}, // ok
	{0x07, 0xc0}, // ok
	{OV2640_SENSOR_COM4, 0xb7}, // 0x87 or 0xb7, reserved
	{0x0E, 0x01}, // vs 0x41
	{0x4c, 0x00}, // ok
	{0x4a, 0x81}, // ok
	{0x21, 0x99}, // ok
	{OV2640_SENSOR_AEW, 0x40}, // ok
	{OV2640_SENSOR_AEB, 0x38}, // ok
	{OV2640_SENSOR_W, 0x82}, // ok
	{0x5c, 0x00}, // ok
	{0x63, 0x00}, // ok

	// start diff
	{OV2640_SENSOR_HISTO_LOW, 0x70},
    {OV2640_SENSOR_HISTO_HIGH, 0x80},
	{0x7c, 0x05},
    {0x20, 0x80},
    {0x28, 0x30},
    {0x6c, 0x00},
    {0x6d, 0x80},
    {0x6e, 0x00},
    {0x70, 0x02},
    {0x71, 0x94},
    {0x73, 0xc1},
    {0x3d, 0x34},
    {0x5a, 0x57},
    {OV2640_SENSOR_BD50, 0xbb},
    {OV2640_SENSOR_BD60, 0x9c},
	// end diff

	//{OV2640_SENSOR_FLL, 0x22}, // frame length ? - same with or without
	//{OV2640_SENSOR_COM3, 0x3a}, // not present - 
	{OV2640_SENSOR_COM3, 0x38}, // not present - this is the default. works.
	{OV2640_SENSOR_REG5D, 0x55}, // not present
	{OV2640_SENSOR_REG5E, 0x7d}, // not present
	{OV2640_SENSOR_REG5F, 0x7d}, // not present
	{OV2640_SENSOR_REG60, 0x55}, // not present 
	{OV2640_SENSOR_HISTO_LOW, 0x70}, // ok
	{OV2640_SENSOR_HISTO_HIGH, 0x80},  //ok
	{0x7c, 0x05}, // ok
	{0x20, 0x80}, // ok
	{0x28, 0x30}, // ok
	{0x6c, 0x00}, // ok
	{0x6d, 0x80}, // ok
	{0x6e, 0x00}, // ok
	{0x70, 0x02}, // ok
	{0x71, 0x94}, // ok
	{0x73, 0xc1}, // ok
	{0x3d, 0x34}, // ok
	{OV2640_SENSOR_COM7, 0x04}, 
	//{OV2640_SENSOR_COM7, 0x24},

	//{OV2640_SENSOR_COM7, 0x24},
    //{OV2640_SENSOR_HREFST, 0x11},
    //{OV2640_SENSOR_HREFEND, 0x43},
    //{OV2640_SENSOR_VSTART, 0x00},
    //{OV2640_SENSOR_VEND, 0x25},
    //{OV2640_SENSOR_REG32, 0x89},

	{0x5a, 0x57}, // ok
	{0x4f, 0xbb}, // not present
	{0x50, 0x9c}, // not present

	// DSP
	{OV2640_BANK_SEL, 0x00}, 
	{0xe5, 0x7f}, 
	{0xf9, 0xc0}, 
	{0x41, 0x24}, 
	{OV2640_DSP_RESET, 0x14}, 
	{0x76, 0xff}, 
	{0x33, 0xa0}, 
	{0x42, 0x20}, 
	{0x43, 0x18}, 
	{0x4c, 0x0}, 
	{0x87, 0xd0}, 
	{0x88, 0x3f}, 
	{0xd7, 0x3}, 
	{0xd9, 0x10}, 
	{OV2640_DSP_R_DVP_SP, 0x82}, 
	{0xc8, 0x8}, 
	{0xc9, 0x80}, 
	{0x7c, 0x0}, 
	{0x7d, 0x0}, 
	{0x7c, 0x3}, 
	{0x7d, 0x48}, 
	{0x7d, 0x48}, 
	{0x7c, 0x8}, 
	{0x7d, 0x20}, 
	{0x7d, 0x10}, 
	{0x7d, 0xe}, 
	{0x90, 0x0}, 
	{0x91, 0xe}, 
	{0x91, 0x1a}, 
	{0x91, 0x31}, 
	{0x91, 0x5a}, 
	{0x91, 0x69}, 
	{0x91, 0x75}, 
	{0x91, 0x7e}, 
	{0x91, 0x88}, 
	{0x91, 0x8f}, 
	{0x91, 0x96}, 
	{0x91, 0xa3}, 
	{0x91, 0xaf}, 
	{0x91, 0xc4}, 
	{0x91, 0xd7}, 
	{0x91, 0xe8}, 
	{0x91, 0x20}, 
	{0x92, 0x0}, 

	{0x93, 0x6}, 
	{0x93, 0xe3}, 
	{0x93, 0x3}, 
	{0x93, 0x3}, 
	{0x93, 0x0}, 
	{0x93, 0x2}, 
	{0x93, 0x0}, 
	{0x93, 0x0}, 
	{0x93, 0x0}, 
	{0x93, 0x0}, 
	{0x93, 0x0}, 
	{0x93, 0x0}, 
	{0x93, 0x0}, 
	{0x96, 0x0}, 
	{0x97, 0x8}, 
	{0x97, 0x19}, 
	{0x97, 0x2}, 
	{0x97, 0xc}, 
	{0x97, 0x24}, 
	{0x97, 0x30}, 
	{0x97, 0x28}, 
	{0x97, 0x26}, 
	{0x97, 0x2}, 
	{0x97, 0x98}, 
	{0x97, 0x80}, 
	{0x97, 0x0}, 
	{0x97, 0x0}, 
	{0xa4, 0x0}, 
	{0xa8, 0x0}, 
	{0xc5, 0x11}, 
	{0xc6, 0x51}, 
	{0xbf, 0x80}, 
	{0xc7, 0x10}, 
	{0xb6, 0x66}, 
	{0xb8, 0xa5}, 
	{0xb7, 0x64}, 
	{0xb9, 0x7c}, 
	{0xb3, 0xaf}, 
	{0xb4, 0x97}, 
	{0xb5, 0xff}, 
	{0xb0, 0xc5}, 
	{0xb1, 0x94}, 
	{0xb2, 0xf}, 
	{0xc4, 0x5c}, 
	{0xa6, 0x0}, 
	{0xa7, 0x20}, 
	{0xa7, 0xd8}, 
	{0xa7, 0x1b}, 
	{0xa7, 0x31}, 
	{0xa7, 0x0}, 
	{0xa7, 0x18}, 
	{0xa7, 0x20}, 
	{0xa7, 0xd8}, 
	{0xa7, 0x19}, 
	{0xa7, 0x31}, 
	{0xa7, 0x0}, 
	{0xa7, 0x18}, 
	{0xa7, 0x20}, 
	{0xa7, 0xd8}, 
	{0xa7, 0x19}, 
	{0xa7, 0x31}, 
	{0xa7, 0x0}, 
	{0xa7, 0x18}, 
	{0x7f, 0x0}, 
	{0xe5, 0x1f}, 
	{0xe1, 0x77}, 
	{0xdd, 0x7f}, 
	{0xc2, 0xe}, 
	// DSP
	{OV2640_BANK_SEL, 0x0}, 
	{OV2640_DSP_RESET, 0x4}, 
	{OV2640_DSP_HSIZE8, 0xc8},	// 0xc8 << 3 => 1600
	{OV2640_DSP_VSIZE8, 0x96},	// 0x96 << 3 = > 1200
	//{OV2640_DSP_HSIZE8, 0x32}, // 0x32 << 32 => 400
	//{OV2640_DSP_VSIZE8, 0x25}, // 0x25 << 32 => 296
	
	// {OV2640_DSP_CTRL2, 0x3d}, // old
	{OV2640_DSP_CTRL2, 0x35},

	{OV2640_DSP_HSIZE, 0x90},	// 0x90 | 0x100 => 0x190 = 400 *4 = 1600
	{OV2640_DSP_VSIZE, 0x2c},	// 0x2c | 0x100 => 0x12C = 300 * 3 = 1200
	{OV2640_DSP_XOFFL, 0x0}, 
	{OV2640_DSP_YOFFL, 0x0},
	{OV2640_DSP_VHYX, 0x88}, // for 1600x1200 and offset 0

	//{OV2640_DSP_HSIZE, 0x64}, // 0x64 = 100 * 4 = 400
	//{OV2640_DSP_VSIZE, 0x4a}, // 0x4A = 74 * 4 = 296
	//{OV2640_DSP_VHYX, 0x00},

		
	{OV2640_DSP_TEST, 0x00}, 
		
	{OV2640_DSP_CTRL, 0x92}, 
	{OV2640_DSP_ZMOW, 0x50},
	{OV2640_DSP_ZMOH, 0x3c},
	{OV2640_DSP_ZMHH, 0x0},

	{OV2640_DSP_R_DVP_SP, 0x04},
	{OV2640_DSP_RESET, 0x00},
	// DSP
	{OV2640_BANK_SEL, 0x00},
	{OV2640_DSP_R_BYPASS, 0x00},
	{OV2640_DSP_IMAGE_MODE, 0x80}, // RGB 565
	{0xd7, 0x30}, 
	{OV2640_DSP_RESET, 0x00}, 
	{OV2640_DSP_R_BYPASS, 0x00},
};

const struct sensor_reg OV2640_FORMAT_CIF[] = 
{
    {OV2640_BANK_SEL, OV2640_BANK_SEL_SENSOR},
    {OV2640_SENSOR_COM7, 0x20},

    //Set the sensor output window
    {OV2640_SENSOR_COM1, 0x0A},			// SVGA ?
    {OV2640_SENSOR_REG32, 0x89},		// ????
    {OV2640_SENSOR_HREFST, 0x11},		// ==> 0x45, 69 dec
    {OV2640_SENSOR_HREFEND, 0x43}, 		// ==> 0x10E, 270 dec
    {OV2640_SENSOR_VSTART, 0x00}, 		// 2
    {OV2640_SENSOR_VEND, 0x25}, 		// 0x96, 150

    {OV2640_SENSOR_BD50, 0xca},	// ?
    {OV2640_SENSOR_BD60, 0xa8},	// ?
    {0x5a, 0x23},
    {0x6d, 0x00},
    {0x3d, 0x38},
    {0x39, 0x92},
    {0x35, 0xda},
    {0x22, 0x1a},
    {0x37, 0xc3},
    {0x23, 0x00},
    {OV2640_SENSOR_ARCOM2, 0xc0}, // dunno
    {0x06, 0x88},
    {0x07, 0xc0},
    {OV2640_SENSOR_COM4, 0x87}, // reserved
    {0x0e, 0x41},
    {0x4c, 0x00},

    {OV2640_BANK_SEL, OV2640_BANK_SEL_DSP},
    {OV2640_DSP_RESET, 0x04},

    //Set the sensor resolution (UXGA, SVGA, CIF)
    {OV2640_DSP_HSIZE8, 0x32}, // raw 200
    {OV2640_DSP_VSIZE8, 0x25}, // raw 148
    {OV2640_DSP_SIZEL, 0x00},

    //Set the image window size >= output size
    {OV2640_DSP_HSIZE, 0x64}, // 100*4 = 400
    {OV2640_DSP_VSIZE, 0x4a}, // 74*4 = 296
    {OV2640_DSP_XOFFL, 0x00}, //
    {OV2640_DSP_YOFFL, 0x00}, // 
    {OV2640_DSP_VHYX, 0x00},
    {OV2640_DSP_TEST, 0x00},

    {OV2640_DSP_CTRL2, 0x20 | 0x1D},
    {OV2640_DSP_CTRL, 0x80},
};

//the one used
const struct sensor_reg OV2640_FORMAT_RGB565[] =
{
	{ OV2640_BANK_SEL, OV2640_BANK_SEL_DSP },	// DSP

	{ OV2640_DSP_RESET, 0x04 },
	{ OV2640_DSP_IMAGE_MODE, 0x08 },
	{ 0xD7, 0x03 },	// same
	{ 0xDF, 0x02 },
	{ 0x33, 0xa0 },
	{ 0x3C, 0x00 },
	{ 0xe1, 0x77 }, // same
	{ OV2640_DSP_RESET, 0x00 },

	{ OV2640_BANK_SEL, OV2640_BANK_SEL_SENSOR },	// sensor
	{ 0xe0, 0x00 },
	{ 0xe1, 0x00 },
	{ 0xe5, 0x00 },
	{ 0xd7, 0x00 },
	{ 0xda, 0x00 },
	{ 0xe0, 0x00 },
};

const struct sensor_reg OV2640_FORMAT_YUV422[] =
{
	{ OV2640_BANK_SEL, 0x00 },
	{ OV2640_DSP_RESET, 0x04 },
	{ OV2640_DSP_IMAGE_MODE, 0x10 },
	{ 0xD7, 0x03 },
	{ 0xDF, 0x00 },
	{ 0x33, 0x80 },
	{ 0x3C, 0x40 },
	{ 0xe1, 0x77 },
	{ OV2640_DSP_RESET, 0x00 },
};

const struct sensor_reg OV2640_FORMAT_JPG[] =
{
	{ OV2640_BANK_SEL, 0x01 },	// sensor
	{ OV2640_DSP_RESET, 0x14 },
	{ 0xe1, 0x77 },
	{ 0xe5, 0x1f },
	{ 0xd7, 0x03 },
	{ OV2640_DSP_IMAGE_MODE, 0x10 },
	{ OV2640_DSP_RESET, 0x00 },
};

const struct sensor_reg OV2640_FORMAT_RAW[] =
{
	{ OV2640_BANK_SEL, 0x00 },
};

const struct sensor_reg OV2640_96x64_[] =  
{
	{ OV2640_BANK_SEL, 0x01 },

};
const struct sensor_reg OV2640_96x96_[] =  
{
	{ OV2640_BANK_SEL, 0x01 },

};
const struct sensor_reg OV2640_128x96_[] =  
{
	{ OV2640_BANK_SEL, 0x01 },

};

const struct sensor_reg OV2640_160x120_[] =
{
  { OV2640_BANK_SEL, 0x01 },
  { OV2640_SENSOR_COM7, 0x20 },
  { OV2640_SENSOR_HREFST, 0x11 },
  { OV2640_SENSOR_HREFEND, 0x43 },
  { OV2640_SENSOR_VSTART, 0x00 },
  { OV2640_SENSOR_VEND, 0x4b },
  { OV2640_SENSOR_REG32, 0x09 },
  { OV2640_SENSOR_BD50, 0xca },
  { OV2640_SENSOR_BD60, 0xa8 },
  { 0x5a, 0x23 },
  { 0x6d, 0x00 },
  { 0x39, 0x12 },
  { 0x35, 0xda },
  { 0x22, 0x1a },
  { 0x37, 0xc3 },
  { 0x23, 0x00 },
  { OV2640_SENSOR_ARCOM2, 0xc0 },
  { 0x36, 0x1a },
  { 0x06, 0x88 },
  { 0x07, 0xc0 },
  { OV2640_SENSOR_COM4, 0x87 },
  { 0x0e, 0x41 },
  { 0x4c, 0x00 },
	// DSP
  { OV2640_BANK_SEL, 0x00 },
  { OV2640_DSP_RESET, 0x04 },
  { OV2640_DSP_CTRL0, 0x64 },
  { OV2640_DSP_CTRL1, 0x4b },
  { 0x86, 0x35 },
  { OV2640_DSP_CTRL, 0x92 },
  { OV2640_DSP_HSIZE, 0xc8 },
  { OV2640_DSP_VSIZE, 0x96 },
  { OV2640_DSP_XOFFL, 0x00 },
  { OV2640_DSP_YOFFL, 0x00 },
  { OV2640_DSP_VHYX, 0x00 },
  { OV2640_DSP_TEST, 0x00 },
  { OV2640_DSP_ZMOW, 0x28 },
  { OV2640_DSP_ZMOH, 0x1e },
  { OV2640_DSP_ZMHH, 0x00 },
  { OV2640_DSP_RESET, 0x00 },

};

/* JPG, 0x176x144 */
const struct sensor_reg OV2640_176x144_[] =  
{
  { OV2640_BANK_SEL, 0x01 },
  { 0x12, 0x40 },
  { 0x17, 0x11 },
  { 0x18, 0x43 },
  { 0x19, 0x00 },
  { 0x1a, 0x4b },
  { 0x32, 0x09 },
  { 0x4f, 0xca },
  { 0x50, 0xa8 },
  { 0x5a, 0x23 },
  { 0x6d, 0x00 },
  { 0x39, 0x12 },
  { 0x35, 0xda },
  { 0x22, 0x1a },
  { 0x37, 0xc3 },
  { 0x23, 0x00 },
  { 0x34, 0xc0 },
  { 0x36, 0x1a },
  { 0x06, 0x88 },
  { 0x07, 0xc0 },
  { 0x0d, 0x87 },
  { 0x0e, 0x41 },
  { 0x4c, 0x00 },
  { OV2640_BANK_SEL, 0x00 },
  { OV2640_DSP_RESET, 0x04 },
  { 0xc0, 0x64 },
  { 0xc1, 0x4b },
  { 0x86, 0x35 },
  { 0x50, 0x92 },
  { 0x51, 0xc8 },
  { 0x52, 0x96 },
  { 0x53, 0x00 },
  { 0x54, 0x00 },
  { 0x55, 0x00 },
  { 0x57, 0x00 },
  { 0x5a, 0x2c },
  { 0x5b, 0x24 },
  { 0x5c, 0x00 },
  { OV2640_DSP_RESET, 0x00 },

};

const struct sensor_reg OV2640_320x240_[] =  
{
  { OV2640_BANK_SEL, 0x01 },
  { 0x12, 0x40 },
  { 0x17, 0x11 },
  { 0x18, 0x43 },
  { 0x19, 0x00 },
  { 0x1a, 0x4b },
  { 0x32, 0x09 },
  { 0x4f, 0xca },
  { 0x50, 0xa8 },
  { 0x5a, 0x23 },
  { 0x6d, 0x00 },
  { 0x39, 0x12 },
  { 0x35, 0xda },
  { 0x22, 0x1a },
  { 0x37, 0xc3 },
  { 0x23, 0x00 },
  { 0x34, 0xc0 },
  { 0x36, 0x1a },
  { 0x06, 0x88 },
  { 0x07, 0xc0 },
  { 0x0d, 0x87 },
  { 0x0e, 0x41 },
  { 0x4c, 0x00 },
  { OV2640_BANK_SEL, 0x00 },
  { OV2640_DSP_RESET, 0x04 },
  { 0xc0, 0x64 },
  { 0xc1, 0x4b },
  { 0x86, 0x35 },
  { 0x50, 0x89 },
  { 0x51, 0xc8 },
  { 0x52, 0x96 },
  { 0x53, 0x00 },
  { 0x54, 0x00 },
  { 0x55, 0x00 },
  { 0x57, 0x00 },
  { 0x5a, 0x50 },
  { 0x5b, 0x3c },
  { 0x5c, 0x00 },
  { OV2640_DSP_RESET, 0x00 },
};

/* JPG 352x288 */

const struct sensor_reg OV2640_352x288_[] =  

{
  { OV2640_BANK_SEL, 0x01 },

};

/* JPG 640x480 */
const struct sensor_reg OV2640_640x480_[] =  
{
	{ OV2640_BANK_SEL, 0x01},
                      
};

#endif
